#!/usr/bin/env bash

# List of workspaces
workspaces=$(i3-msg -t get_workspaces | awk 'BEGIN {
                                                        RS="(},{)|(\\[{)|(}\\])";
                                                        FPAT="([^,:]+)|([^,]+{[^}]+})|(\"[^\"]+\")"
                                             }
                                             $0 !~ "^\\s*$" {
                                             gsub(/"/, "", $4)
                                             print $2, $4, $8, $11
                                             }' | sort)

act_on_container() {

    # Get desired workspace
    [[ -z $2 ]] && target=$(echo "$workspaces" | awk '{print $2}' | dmenu -i -p "Select workspace") || target=$2

    # Exit if empty
    [[ -z $target ]] && exit

    # See if target exsits
    existing_target=$(echo "$workspaces" | awk '{print $2}' | grep -F "$target")

    # If new workspace has to be created
    if [[ -n "$existing_target" ]]; then
        target="$existing_target"
    else
        # Add number to workspace name (start at 1, but allow 0)
        new_number=$(echo "$workspaces" | awk '$1!=p+1 && $1!=0 {exit;}{p=$1} END {print p+1}')
        target=$new_number:$target
    fi

    # Execute command
    exec i3-msg "$1" "$target"
}

act_on_workspace() {
    focused_number=$(echo "$workspaces" | awk '$3 ~ "true" {print $1}')
    focused_name=$(echo "$workspaces" | awk '$3 ~ "true" {print $2}' | cut -d":" -f2)

    [[ $1 = 'n' ]] && new_number=$(( (11+focused_number+1) % 11 ))
    [[ $1 = 'p' ]] && new_number=$(( (11+focused_number-1) % 11 ))

    next=$(echo "${workspaces}" | sort -n | awk '$1=='$new_number' {print $2}')
    echo $next

    i3-msg rename workspace to "${new_number}":"${focused_name}"

    # ${variable//pattern} replaces all matches of pattern with nothing
    if [[ ! -z "${next// }" ]]; then
        name_next=${next#*:}
        i3-msg "workspace ${next};\
            rename workspace to ${focused_number}:${name_next};\
            workspace ${new_number}:${focused_name}"
    fi
}

# Command to use
[[ $1 = 'gw' ]] && act_on_container "workspace" "$2"
[[ $1 = 'mc' ]] && act_on_container "move container to workspace" "$2"
[[ $1 = 'mw' ]] && act_on_workspace "$2"
